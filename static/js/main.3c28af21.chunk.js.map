{"version":3,"sources":["components/Header.js","components/Content.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","Header","classes","className","AppBar","position","color","Toolbar","Typography","variant","includeHTML","value","label","padding","width","marginLeft","backgroundColor","display","flexWrap","flexDirection","marginBottom","button","float","textField","menu","success","green","icon","fontSize","iconVariant","opacity","message","alignItems","MySnackbarContentWrapper","props","onClose","other","Icon","CheckCircleIcon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","aria-label","onClick","Content","useState","params","setParams","html","setHtml","data","setData","open","setOpen","handleClose","event","reason","a","axios","get","response","console","error","useEffect","getUser","component","style","TextField","margin","type","onChange","e","target","select","helperText","map","option","MenuItem","Button","copy","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Paper","square","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c28af21.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title}>\n            Random Text Generator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core/\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport copy from \"clipboard-copy\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport clsx from \"clsx\";\nimport { green } from \"@material-ui/core/colors\";\nconst includeHTML = [\n  {\n    value: \"Yes\",\n    label: \"Yes\",\n  },\n  {\n    value: \"No\",\n    label: \"No\",\n  },\n];\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    position: \"relative\",\n    width: \"80%\",\n    marginLeft: \"8%\",\n    backgroundColor: \"#EBEBEB\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    marginBottom: \"2em\",\n  },\n  button: {\n    padding: theme.spacing(1, 2),\n    float: \"right\",\n    marginRight: \"9%\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  menu: {\n    width: 200,\n  },\n  success: {\n    backgroundColor: green[600],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles();\n  const { className, message, onClose, ...other } = props;\n  const Icon = CheckCircleIcon;\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[\"success\"], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\nexport default function Content() {\n  const [params, setParams] = useState(4);\n  const [html, setHtml] = useState(\"No\");\n  const [data, setData] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const handleChange = (event) => {\n    setHtml(event.target.value);\n  };\n  const numberOfParagraphs = (e) => {\n    setParams(e.target.value);\n  };\n  const copyData = (e) => {\n    handleClick();\n    copy(data);\n  };\n  async function getUser() {\n    try {\n      if (html === \"Yes\") {\n        const response = await axios.get(\n          \"https://litipsum.com/api/pride-and-prejudice/\" + params + \"/p\"\n        );\n        setData(response.data);\n      } else {\n        const response = await axios.get(\n          \"https://litipsum.com/api/pride-and-prejudice/\" + params\n        );\n        setData(response.data);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  useEffect(() => {\n    getUser();\n  }, [params, html]);\n  // getUser();\n  return (\n    <div>\n      <Typography\n        variant=\"h4\"\n        component=\"h3\"\n        style={{ padding: \"1.5rem\", textAlign: \"center\" }}\n      >\n        Your Random Generated Text\n        <br />\n        <br />\n        <div>\n          <TextField\n            id=\"outlined-basic\"\n            className={classes.textField}\n            label=\"Paragraphs\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            type=\"number\"\n            onChange={numberOfParagraphs}\n            style={{ alignItems: \"center\" }}\n          />\n          <TextField\n            id=\"outlined-select-currency\"\n            select\n            label=\"Include HTML\"\n            className={classes.textField}\n            value={html}\n            onChange={handleChange}\n            helperText=\"Want to include HTML?\"\n            margin=\"normal\"\n            variant=\"outlined\"\n          >\n            {includeHTML.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>{\" \"}\n        </div>\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            className={classes.button}\n            onClick={copyData}\n          >\n            Copy Text\n          </Button>{\" \"}\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"left\",\n            }}\n            open={open}\n            autoHideDuration={6000}\n            onClose={handleClose}\n          >\n            <MySnackbarContentWrapper\n              onClose={handleClose}\n              message=\"Text Copied Successfully !!\"\n            />\n          </Snackbar>\n          <br />\n        </div>\n      </Typography>\n      <div>\n        <Paper className={classes.root} square={false}>\n          <Typography component=\"p\">{data}</Typography>\n        </Paper>\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport Header from \"./components/Header\";\nimport Content from \"./components/Content\";\nimport \"./index.css\";\n\nexport default function App() {\n  return (\n    <Fragment>\n      <Header />\n      <Content />\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}